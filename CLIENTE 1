using Clases.ApiRest;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using FireSharp.Response;
using FireSharp.Config;
using FireSharp.Interfaces;
using FireSharp;



namespace Clases
{
    public partial class Form1 : Form
    {
        DBApi dBApi = new DBApi();
        public Form1()
        {
            InitializeComponent();
        }

        private void btnPrueba_Click(object sender, EventArgs e)
        {
            dynamic respuesta = dBApi.Get("https://reqres.in/api/users?page=1");
            pictureBox1.ImageLocation = respuesta.data[1].avatar.ToString();
            txtNombreGET.Text = respuesta.data[1].first_name.ToString();
            txtApellidoGET.Text = respuesta.data[1].last_name.ToString();
            txtEmail.Text = respuesta.data[1].email.ToString();
        }

        private void btnPost_Click(object sender, EventArgs e)
        {
           
        }

        private void btnListar_Click(object sender, EventArgs e)
        {
            dynamic response = dBApi.Get("http://localhost:64874/api/INFOCANDIDATOS");
            //textNombre.Text = response.Nombre.ToString();
            //MessageBox.Show(response.ToString());
            dgvPersona.DataSource = response;
            

        }

        private void txtNombre_TextChanged(object sender, EventArgs e)
        {
            dgvPersona.CurrentCell = null;

            foreach (DataGridViewRow fila in dgvPersona.Rows)
            {
                fila.Visible = fila.Cells["cnNombre"].Value.ToString().ToUpper().Contains(txtNombre.Text.ToUpper());
            }
        }

        private void groupBox1_Enter(object sender, EventArgs e)
        {

        }

        private void button1_Click(object sender, EventArgs e)
        {
            Candidatos candidatos = new Candidatos
            {

                Partido = textPartido.Text,
                Candidatura = textCandi.Text,
                Nombre = textNombre.Text,
                Apellidos = textApellido.Text,
                InfoCandi = textInfo.Text

            };

            string json = JsonConvert.SerializeObject(candidatos);
            dynamic respuesta = dBApi.Post("http://localhost:64874/api/Candi/Crear", json);
            MessageBox.Show(respuesta.ToString());
        }

        private void dgvPersona_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {

        }

        private void Form1_Load(object sender, EventArgs e)
        {

        }

        private void textBusqueda_TextChanged(object sender, EventArgs e)
        {
            //dgvPersona.CurrentCell = null;
            //foreach (DataGridViewRow fila in dgvPersona.Rows)
            //{
            //    fila.Visible = fila.Cells[""].Value.ToString().ToUpper().Contains(textBusqueda.Text.ToUpper());
            //}
        }

        private void buttonEditar_Click(object sender, EventArgs e)
        {
            string id = textID.Text;
            dynamic respuesta = dBApi.Delete("http://localhost:64874/api/INFOCANDIDATOS/" + textID.Text + "", id);
            MessageBox.Show("Se eliminaron los datos");
         
        }

        private void textPartido_TextChanged(object sender, EventArgs e)
        {

        }
    }


    public class Candidatos
    {
        public string Partido { get; set; }
        public string Candidatura { get; set; }
        public string Nombre { get; set; }
        public string Apellidos { get; set; }
        public string InfoCandi { get; set; }
    }

    
}


//DBApi consumiendo api

using Newtonsoft.Json;
using RestSharp;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Net;
using System.Text;
using System.Threading.Tasks;
using System.Web;
using System.Windows.Forms;

namespace Clases.ApiRest
{
    public class DBApi
    {
        public dynamic Post(string url, string json, string autorizacion = null)
        {
            try
            {
                var client = new RestClient(url);
                var request = new RestRequest(Method.POST);
                request.AddHeader("content-type", "application/json");
                request.AddParameter("application/json", json, ParameterType.RequestBody);

                if (autorizacion != null)
                {
                    request.AddHeader("Authorization", autorizacion);
                }

                IRestResponse response = client.Execute(request);

                dynamic datos = JsonConvert.DeserializeObject(response.Content);

                return datos;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
                return null;
            }
        }


        public dynamic Get(string url)
        {
            HttpWebRequest myWebRequest = (HttpWebRequest)WebRequest.Create(url);
            myWebRequest.UserAgent = "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:23.0) Gecko/20100101 Firefox/23.0";
            //myWebRequest.CookieContainer = myCookie;
            myWebRequest.Credentials = CredentialCache.DefaultCredentials;
            myWebRequest.Proxy = null;
            HttpWebResponse myHttpWebResponse = (HttpWebResponse)myWebRequest.GetResponse();
            Stream myStream = myHttpWebResponse.GetResponseStream();
            StreamReader myStreamReader = new StreamReader(myStream);
            //Leemos los datos
            string Datos = HttpUtility.HtmlDecode(myStreamReader.ReadToEnd());
            //MessageBox.Show(Datos);
            dynamic data = JsonConvert.DeserializeObject(Datos);

            return data;
        }


        public dynamic Delete(string url, string id)
        {
            var client = new RestClient(url);
            var request = new RestRequest(Method.DELETE);
            var response = client.Execute(request);
            dynamic datos = JsonConvert.DeserializeObject(response.Content);
            return datos;
        }
        


    }
}
